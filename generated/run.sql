
create unlogged table if not exists parent (
    id integer generated by default as identity primary key,
    resource jsonb
);

drop table children;
create unlogged table if not exists children (
    id integer generated by default as identity primary key,
    resource jsonb
);

truncate parent;
truncate children;
insert into parent values (100,'{"name":"yangand"}');
insert into children values (1,100,'{"id":100,"value":"16.8","code":"weight"}');

create function weight (resource jsonb) returns real as $$
begin
  return resource #>> '{value}';
end;
$$ language plpgsql immutable;

alter table children add parent_id integer generated always as ((resource #>> '{id}')::int) stored;

select * from children;

create index children_weight_idx on children (weight(resource))
 include (parent_id)
 where resource @> '{"code":"weight"}';

set enable_seqscan to off;

explain (analyze, costs off, timing off)
select p.resource
  from children c
  join parent p on p.id = c.parent_id
 where c.resource @> '{"code":"weight"}';

select p.resource
  from children c
  join parent p on p.id = c.parent_id
 where c.resource @> '{"code":"weight"}';